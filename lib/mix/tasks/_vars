[
  context: %Mix.Phoenix.Context{
    alias: Forum,
    base_module: App,
    basename: "forum",
    context_app: :app,
    dir: "lib/ash/forum",
    file: "lib/ash/forum.ex",
    generate?: true,
    module: App.Forum,
    name: "Forum",
    opts: [schema: true, context: true],
    schema: %Mix.Phoenix.Schema{
      alias: Post,
      assocs: [{:author, :author_id, "App.Forum.Author", :users}],
      attrs: [body: :string, is_active: :boolean],
      binary_id: nil,
      context_app: :app,
      defaults: %{body: "", is_active: ", default: false"},
      embedded?: false,
      file: "lib/ash/forum/post.ex",
      generate?: true,
      human_plural: "Posts",
      human_singular: "Post",
      indexes: ["create index(:posts, [:author_id])"],
      migration?: true,
      migration_defaults: %{
        body: "",
        is_active: ", default: false, null: false"
      },
      migration_module: Ecto.Migration,
      module: App.Forum.Post,
      opts: [schema: true, context: true],
      params: %{
        create: %{body: "some body", is_active: true},
        default_key: :body,
        update: %{body: "some updated body", is_active: false}
      },
      plural: "posts",
      repo: App.Repo,
      route_helper: "post",
      sample_id: -1,
      singular: "post",
      string_attr: :body,
      table: "posts",
      types: %{body: :string, is_active: :boolean},
      uniques: [],
      web_namespace: nil,
      web_path: nil
    },
    test_file: "test/ash/forum/forum_test.exs",
    web_module: AppWeb
  },
  schema: %Mix.Phoenix.Schema{
    alias: Post,
    assocs: [{:author, :author_id, "App.Forum.Author", :users}],
    attrs: [body: :string, is_active: :boolean],
    binary_id: nil,
    context_app: :app,
    defaults: %{body: "", is_active: ", default: false"},
    embedded?: false,
    file: "lib/ash/forum/post.ex",
    generate?: true,
    human_plural: "Posts",
    human_singular: "Post",
    indexes: ["create index(:posts, [:author_id])"],
    migration?: true,
    migration_defaults: %{body: "", is_active: ", default: false, null: false"},
    migration_module: Ecto.Migration,
    module: App.Forum.Post,
    opts: [schema: true, context: true],
    params: %{
      create: %{body: "some body", is_active: true},
      default_key: :body,
      update: %{body: "some updated body", is_active: false}
    },
    plural: "posts",
    repo: App.Repo,
    route_helper: "post",
    sample_id: -1,
    singular: "post",
    string_attr: :body,
    table: "posts",
    types: %{body: :string, is_active: :boolean},
    uniques: [],
    web_namespace: nil,
    web_path: nil
  }
]
